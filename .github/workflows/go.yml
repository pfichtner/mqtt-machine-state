name: Go

on:
  push:
  pull_request:

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os == 'darwin' && 'macos-latest' || 'ubuntu-latest'}}

    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [386, amd64, arm64]
        exclude:
          - os: darwin
            arch: 386
          - os: windows
            arch: 386

    steps:
     - uses: actions/checkout@v4
     - name: Setup Go
       uses: actions/setup-go@v4
       with:
         go-version: '1.20'
         cache-dependency-path: subdir/go.sum
     - name: Install dependencies
       run: |
          go get .
       env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}

     - name: Build
       run: |
          go build -v -o binaries/mqttmachinestate-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.os == 'windows' && '.exe' || '' }} ./...
       env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
     - name: Upload Artifacts
       uses: actions/upload-artifact@v3
       with:
         name: binaries
         path: binaries

  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: build

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: binaries
          path: binaries

      - name: Display structure of downloaded files
        run: ls -R
  
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          artifacts: "binaries/*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

