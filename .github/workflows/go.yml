name: Go

on:
  push:
  pull_request:

jobs:
  check-matrix:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-os: [linux, darwin, windows]
        go-arch: [amd64, arm64, 386]

    steps:
      - name: Check Matrix Combination
        run: |
          if [ "${{ matrix.go-os }}" == "darwin" ] && [ "${{ matrix.go-arch }}" == "386" ]; then
            echo "Skipping release for darwin/386 combination."
            exit 0
          fi

  build:
    runs-on: ubuntu-latest
    needs: check-matrix

    strategy:
      matrix:
        go-os: [linux, darwin, windows]
        go-arch: [amd64, arm64, 386]

    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          cache-dependency-path: subdir/go.sum
      - name: Install dependencies
        run: |
          go get .
      - name: Build
        run: |
          mkdir -p binaries
          go build -v -o binaries/mqttmachinestate-${{ matrix.go-os }}-${{ matrix.go-arch }} ./...
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: binaries

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: binaries
          path: binaries

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          files: binaries/*
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

